name: Deploy dev enviroment
on:
  workflow_dispatch:
  pull_request:
    branches:
    - main
    paths:
      - app/**/*.js
      - app/**/package.json
      - app/**/package.lock.json
      - app/**/Dockerfile
      - app/**/helmchart/*
      - app/**/codecov.yml
      - .github/workflows/dev.yml
    types: [opened, synchronize, reopened, labeled]

jobs:
  test:
    name: 'Analyze Code'
    runs-on: ubuntu-24.04
    outputs:
      image_tag: ${{ steps.pull_request_id.outputs.image_tag }}
    environment: development
    defaults:
      run:
        working-directory: app
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Node 22
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Clean install modules
      run: npm ci
    
    - name: Unit Testing and Code Coverage
      run: |-
        npm run test
        npm run coverage

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Shorten commit SHA
      id: pull_request_id
      run: |
        SHORTEN_SHA=$(echo "${{ github.head_ref }}" | sha256sum | cut -c 1-5)
        echo "image_tag=$SHORTEN_SHA" >> $GITHUB_OUTPUT

  build-image:
    needs: [test]
    uses: ./.github/workflows/build.yml
    with:
      working_directory: app
      environment: development
      image_tag: ${{ needs.test.outputs.image_tag }}
    secrets: inherit

  deploy:
    runs-on: ubuntu-latest
    needs: [build-image, test]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin -q
  

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.CLUSTER }} \
            --zone us-central1-a \
            --project ${{ secrets.PROJECT_ID }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Get nodes
        run: |
          kubectl get nodes

      - name: Clone repo
        run: |
          git clone --branch test https://github.com/FranciscoBodden/devsu-test-ci-cd.git
          cd devsu-test-ci-cd/app/helmapp
          helm dependency update
  
      - name: Deploy Helm chart
        run: |
          cd devsu-test-ci-cd/app/helmapp
          helm upgrade --install "app-k8s-${{ needs.test.outputs.image_tag }}" . \
            --namespace test \
            --create-namespace \
            --set image.repository=kerdockert/app \
            --set image.tag=${{ needs.test.outputs.image_tag }}  \
            --set service.port=8000 \
            --set resources.enabled=true \
            --set autoscaling.enabled=true \
            --set autoscaling.minReplicas=2 \
            --set autoscaling.maxReplicas=5 \
            --set autoscaling.targetCPUUtilizationPercentage=80 \
            --set service.type=NodePort \
            --set database.name="./dev.sqlite" \
            --set database.user="user" \
            --set database.password="password" \
            --set database.existingSecret="" \
            --set ingress.enabled=true \
            --set ingress.className=gce \
            --set ingress.annotations."kubernetes\.io/ingress\.class"="gce" \
            --set ingress.annotations."kubernetes\.io/ingress\.global-static-ip-name"="static-ip-test-k8s" \
            --set ingress.hosts[0].host='${{ secrets.DOMAIN }}' \
            --set ingress.hosts[0].paths[0].path="/" \
            --set ingress.hosts[0].paths[0].pathType="Prefix" \
            --wait-for-jobs \
            --atomic \
            --force \
            --debug
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: "False"
