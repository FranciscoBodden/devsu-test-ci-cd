name: Deploy app to GKE
on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
      working_directory:
        required: false
        type: string
      environment:
        required: false
        type: string
        default: staging

jobs:
  deploy:
    name: Deploy app to GKE
    runs-on: ubuntu-24.04
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.PROJECT_ID }}

    - name: Install gke-gcloud-auth-plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin -q

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials ${{ secrets.CLUSTER }} \
          --zone us-central1-a \
          --project ${{ secrets.PROJECT_ID }}

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'

    - name: Clone repo
      run: |
        git clone --branch test https://github.com/FranciscoBodden/devsu-test-ci-cd.git
        helm dependency update

    - name: Deploy Helm chart
      run: |
        helm upgrade --install "app-k8s-${{ inputs.image_tag }}" . \
          --namespace test \
          --create-namespace \
          --set image.repository=kerdockert/app \
          --set image.tag=${{ inputs.image_tag }}  \
          --set service.port=8000 \
          --set resources.enabled=true \
          --set autoscaling.enabled=true \
          --set autoscaling.minReplicas=2 \
          --set autoscaling.maxReplicas=5 \
          --set autoscaling.targetCPUUtilizationPercentage=80 \
          --set service.type=NodePort \
          --set database.name="./dev.sqlite" \
          --set database.user="user" \
          --set database.password="password" \
          --set database.existingSecret="" \
          --set ingress.enabled=true \
          --set ingress.className=gce \
          --set ingress.annotations."kubernetes\.io/ingress\.class"="gce" \
          --set ingress.annotations."kubernetes\.io/ingress\.global-static-ip-name"="static-ip-test-k8s" \
          --set ingress.annotations."networking\.gke\.io/managed-certificates"="app-managed-cert-${{ inputs.image_tag }}" \
          --set cert.name=app-managed-cert-${{ inputs.image_tag }} \
          --set cert.domains="{${{ inputs.image_tag }}.${{ secrets.DOMAIN }}}" \
          --set ingress.hosts[0].host='${{ inputs.image_tag }}.${{ secrets.DOMAIN }}' \
          --set ingress.hosts[0].paths[0].path="/" \
          --set ingress.hosts[0].paths[0].pathType="Prefix" \
          --wait-for-jobs \
          --atomic \
          --force \
          --debug
      env:
        USE_GKE_GCLOUD_AUTH_PLUGIN: "False"